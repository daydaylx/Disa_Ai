name: "Bundle Size Monitor"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  bundle-size-monitor:
    name: "Monitor Bundle Size"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v5

      - name: "Setup Node.js"
        uses: actions/setup-node@v6
        with:
          node-version: "22.19.0"
          cache: "npm"

      - name: "Install dependencies"
        run: npm ci

      - name: "Build production bundle"
        run: npm run build

      - name: "Analyze bundle composition"
        run: |
          echo "## üìä Bundle Analysis Report" > bundle-report.md
          echo "" >> bundle-report.md
          echo "Generated on: $(date -u)" >> bundle-report.md
          echo "" >> bundle-report.md

          # Analyze JavaScript bundles
          echo "### JavaScript Bundles" >> bundle-report.md
          echo "| File | Size | Compressed | Type |" >> bundle-report.md
          echo "|------|------|------------|------|" >> bundle-report.md

          find dist/assets -name "*.js" | sort | while read file; do
            size=$(stat -c%s "$file")
            size_kb=$((size / 1024))
            filename=$(basename "$file")

            # Determine bundle type based on filename patterns
            if [[ $filename == *"vendor"* ]] || [[ $filename == *"chunk-"* ]]; then
              type="Vendor"
            elif [[ $filename == *"index"* ]] || [[ $filename == *"main"* ]]; then
              type="Main"
            else
              type="Chunk"
            fi

            echo "| $filename | ${size_kb}KB | ~$((size_kb * 70 / 100))KB | $type |" >> bundle-report.md
          done

          echo "" >> bundle-report.md

          # Analyze CSS bundles
          echo "### CSS Bundles" >> bundle-report.md
          echo "| File | Size | Compressed |" >> bundle-report.md
          echo "|------|------|------------|" >> bundle-report.md

          find dist/assets -name "*.css" | sort | while read file; do
            size=$(stat -c%s "$file")
            size_kb=$((size / 1024))
            filename=$(basename "$file")
            echo "| $filename | ${size_kb}KB | ~$((size_kb * 75 / 100))KB |" >> bundle-report.md
          done

          echo "" >> bundle-report.md

          # Calculate totals
          JS_TOTAL=$(find dist/assets -name "*.js" -exec stat -c%s {} \; | awk '{sum += $1} END {print sum}')
          CSS_TOTAL=$(find dist/assets -name "*.css" -exec stat -c%s {} \; | awk '{sum += $1} END {print sum}')
          TOTAL_SIZE=$((JS_TOTAL + CSS_TOTAL))

          JS_KB=$((JS_TOTAL / 1024))
          CSS_KB=$((CSS_TOTAL / 1024))
          TOTAL_KB=$((TOTAL_SIZE / 1024))

          echo "### üìà Size Summary" >> bundle-report.md
          echo "" >> bundle-report.md
          echo "- **JavaScript Total:** ${JS_KB}KB" >> bundle-report.md
          echo "- **CSS Total:** ${CSS_KB}KB" >> bundle-report.md
          echo "- **Combined Total:** ${TOTAL_KB}KB" >> bundle-report.md
          echo "- **Estimated Compressed:** ~$((TOTAL_KB * 70 / 100))KB (gzip)" >> bundle-report.md
          echo "" >> bundle-report.md

          # Mobile performance assessment
          echo "### üì± Mobile Performance Assessment" >> bundle-report.md
          echo "" >> bundle-report.md
          if [ $TOTAL_KB -lt 200 ]; then
            echo "üü¢ **Excellent** - Very fast loading on mobile networks" >> bundle-report.md
          elif [ $TOTAL_KB -lt 500 ]; then
            echo "üü° **Good** - Acceptable loading time on mobile networks" >> bundle-report.md
          elif [ $TOTAL_KB -lt 1000 ]; then
            echo "üü† **Moderate** - May be slow on slower mobile connections" >> bundle-report.md
          else
            echo "üî¥ **Attention Needed** - Bundle size may impact mobile performance" >> bundle-report.md
          fi
          echo "" >> bundle-report.md

          # Performance recommendations
          echo "### üí° Mobile-First Recommendations" >> bundle-report.md
          echo "" >> bundle-report.md
          echo "- **Target:** Keep total bundle < 800KB for good mobile UX" >> bundle-report.md
          echo "- **Critical:** Ensure essential code loads first (< 200KB)" >> bundle-report.md
          echo "- **Progressive:** Use code splitting for non-essential features" >> bundle-report.md
          echo "- **Caching:** Service Worker caches bundles after first load" >> bundle-report.md

          # Store metrics for comparison
          echo $TOTAL_KB > current-bundle-size.txt

      - name: "Comment on Pull Request"
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('bundle-report.md', 'utf8');

            // Find existing bundle comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const existingComment = comments.data.find(comment =>
              comment.body.includes('üìä Bundle Analysis Report')
            );

            const commentBody = `${report}\n\n---\n*Bundle analysis performed by GitHub Actions*`;

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

      - name: "Upload bundle artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis-${{ github.sha }}
          path: |
            bundle-report.md
            current-bundle-size.txt
            dist/assets/
          retention-days: 30

      - name: "Check for bundle size regression"
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const currentSize = parseInt(fs.readFileSync('current-bundle-size.txt', 'utf8').trim());

            // Bundle size thresholds for alerts
            const WARNING_THRESHOLD = 800; // KB - Adjusted for React 19 overhead
            const CRITICAL_THRESHOLD = 1000; // KB
            const REGRESSION_THRESHOLD = 100; // KB increase

            console.log(`Current bundle size: ${currentSize}KB`);

            // Check for critical size thresholds
            if (currentSize > CRITICAL_THRESHOLD) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `üö® Critical Bundle Size Alert: ${currentSize}KB`,
                body: `
            ## üö® Critical Bundle Size Alert

            The bundle size has exceeded the critical threshold of ${CRITICAL_THRESHOLD}KB.

            **Current Size:** ${currentSize}KB
            **Critical Threshold:** ${CRITICAL_THRESHOLD}KB
            **Overage:** ${currentSize - CRITICAL_THRESHOLD}KB

            ### Impact
            - Significantly slower loading on mobile networks
            - Poor user experience on slower connections
            - Higher bounce rates likely

            ### Immediate Actions Required
            1. Review recent changes for large dependencies
            2. Implement code splitting for non-essential features
            3. Consider lazy loading for heavy components
            4. Remove unused dependencies

            ### Analysis
            See the latest [bundle analysis artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId})

            ---
            *Alert generated by Bundle Size Monitor*
                `,
                labels: ['performance', 'critical', 'bundle-size']
              });
            } else if (currentSize > WARNING_THRESHOLD) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `‚ö†Ô∏è Bundle Size Warning: ${currentSize}KB`,
                body: `
            ## ‚ö†Ô∏è Bundle Size Warning

            The bundle size has exceeded the warning threshold of ${WARNING_THRESHOLD}KB.

            **Current Size:** ${currentSize}KB
            **Warning Threshold:** ${WARNING_THRESHOLD}KB
            **Overage:** ${currentSize - WARNING_THRESHOLD}KB

            ### Recommendations
            1. Monitor bundle growth in upcoming changes
            2. Consider implementing code splitting
            3. Review and optimize large dependencies
            4. Keep mobile performance in mind

            ### Analysis
            See the latest [bundle analysis artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId})

            ---
            *Alert generated by Bundle Size Monitor*
                `,
                labels: ['performance', 'warning', 'bundle-size']
              });
            }

            // Store current size for future comparisons
            console.log(`Bundle monitoring completed. Size: ${currentSize}KB`);

            // Optional: Close previous bundle size issues if size is now under control
            if (currentSize <= WARNING_THRESHOLD) {
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'bundle-size',
                state: 'open'
              });

              for (const issue of issues.data) {
                if (issue.title.includes('Bundle Size Alert') || issue.title.includes('Bundle Size Warning')) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    body: `‚úÖ Bundle size is now back under control: ${currentSize}KB ‚â§ ${WARNING_THRESHOLD}KB`
                  });

                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    state: 'closed'
                  });
                }
              }
            }
