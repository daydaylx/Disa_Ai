name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: "1"
  NODE_ENV: "test"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run -s lint

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run -s typecheck

  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [typecheck]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm test -s

  e2e:
    name: E2E (offline)
    runs-on: ubuntu-latest
    needs: [unit]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      # Installiere Playwright-Browser nur im CI-Job, nicht ad hoc in Tests
      - name: Install Playwright chromium
        run: npx playwright install --with-deps chromium
      - name: Run Playwright (offline suite)
        env:
          PWDEBUG: "0"
        run: |
          npx playwright test \
            --project=chromium \
            --retries=0 \
            --workers=1 \
            --reporter=dot \
            --grep-invert @flaky

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [e2e]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run -s build
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: dist
          if-no-files-found: error

  gate:
    name: Deploy Gate
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: echo "All required gates passed. Deploy happens via Cloudflare Pages, not GitHub Actions."
