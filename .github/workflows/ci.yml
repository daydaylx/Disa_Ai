name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install deps (clean)
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      # Lint nicht-blockend, weil du lokal schon aufgeräumt hast
      - name: Lint (non-blocking)
        run: npm run -s lint || echo "lint skipped / non-blocking"

      - name: Build
        run: npm run build

      # JSON kaputt = sofort Fail (genau dein persona.json-Fehler von vorhin)
      - name: Validate persona.json
        run: node -e "JSON.parse(require('fs').readFileSync('public/persona.json','utf8')); console.log('persona.json OK')"

  unit:
    name: Unit tests (Vitest)
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - run: npm ci
      - name: Run unit tests
        run: npm run test

  e2e:
    name: E2E (Playwright)
    needs: build
    runs-on: ubuntu-latest
    env:
      CI: true
      # Service Worker kann E2E stören → im Code respektieren (z.B. nicht registrieren, wenn gesetzt)
      VITE_DISABLE_SW: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build app (served by webServer in config)
        run: npm run build

      - name: Run Playwright tests
        run: npx playwright test --config e2e/playwright.config.ts

      - name: Upload Playwright HTML report if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
