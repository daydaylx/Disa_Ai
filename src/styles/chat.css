/* Chat container: genug Platz nach unten (Tabbar + Sticky + Keyboard) */
.chat-root {
  scroll-padding-bottom: calc(
    var(--tabbar-h, 56px) + env(safe-area-inset-bottom, 0px) + var(--kb, 0px) + 12px
  );
}

/* Messages */
.msg {
  display: flex;
  gap: 10px;
  margin: 10px 0;
}
.msg-in .bubble {
  /* inbound (assistant) wird über Klassen in JSX gestylt (bg-grad-card).
     Hier kein Override des Backgrounds, nur Fallback-Border. */
  border-color: var(--border-glass);
}
.msg-out {
  justify-content: flex-end;
}
.msg-out .bubble {
  /* outbound (user) – glasiger Fallback falls Klassen fehlen */
  background: var(--surface-glass);
  border: 1px solid var(--border-glass);
}
.bubble {
  max-width: 85vw;
  padding: 12px 14px;
  border-radius: 16px;
  border: 1px solid var(--border-glass);
  backdrop-filter: blur(8px);
}

/* Mehr Bubble & Glanz – dezente Glas-/Glanz-Layer */
.chat-bubble {
  position: relative;
  overflow: hidden;
  /* zarte Farb-Verläufe für mehr Tiefe */
  background-image: var(--grad-card);
  background-blend-mode: overlay;
}
.chat-bubble::before {
  content: "";
  position: absolute;
  inset: 0 auto auto 0;
  height: 46%;
  width: 100%;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.26) 0%,
    rgba(255, 255, 255, 0.16) 35%,
    rgba(255, 255, 255, 0.06) 60%,
    transparent 100%
  );
  pointer-events: none;
  mix-blend-mode: screen;
}
.chat-bubble::after {
  content: "";
  position: absolute;
  inset: auto 0 0 0;
  height: 18px;
  background: linear-gradient(180deg, transparent, rgba(255, 255, 255, 0.06));
  pointer-events: none;
}

/* sanfter Glow und Glas-Schatten */
.chat-bubble {
  box-shadow:
    0 8px 26px rgba(0, 0, 0, 0.38),
    0 4px 20px rgba(124, 102, 255, 0.12),
    inset 0 0 0 1px rgba(255, 255, 255, 0.12);
}
@media (hover: hover) {
  .chat-bubble:hover {
    box-shadow:
      0 14px 40px rgba(124, 102, 255, 0.35),
      inset 0 0 0 1px rgba(255, 255, 255, 0.16);
    @apply saturate-115;
  }
}

/* sanfte, sehr langsame Farb-Animation für den Verlauf (optional, wirkt nur minimal) */
@media (prefers-reduced-motion: no-preference) {
  .chat-bubble {
    background-size: 160% 160%;
    animation: bubbleShift 24s ease-in-out infinite alternate;
  }
}

@keyframes bubbleShift {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 100% 100%;
  }
}

/* Dezenter Hover-/Focus-State für Bubbles */
.chat-bubble,
.bubble,
.msg {
  transition:
    border-color 120ms ease,
    background-color 120ms ease,
    box-shadow 120ms ease;
}
.chat-bubble:focus-within,
.bubble:focus-within,
.msg:focus-within {
  border-color: hsl(var(--ring));
  box-shadow:
    0 0 0 1px hsl(var(--ring)) inset,
    0 4px 18px rgba(0, 0, 0, 0.25);
  background-color: var(--surface-glass);
}

@media (hover: hover) {
  .chat-bubble:hover,
  .bubble:hover,
  .msg:hover {
    border-color: hsl(var(--ring));
    box-shadow:
      0 0 0 1px hsl(var(--ring)) inset,
      0 4px 18px rgba(0, 0, 0, 0.25);
    background-color: var(--surface-glass);
  }
}

/* Code blocks inside messages */
.bubble pre {
  margin: 0.25rem 0 0 0;
  padding: 10px;
  border-radius: 12px;
  background: var(--surface-glass);
  border: 1px solid var(--border-glass);
  overflow: auto;
}
.bubble code {
  font-size: 0.92rem;
}

/* Typing indicator */
.typing-dots {
  display: inline-flex;
  align-items: center;
  gap: 6px;
}
.typing-dots .dot {
  width: 6px;
  height: 6px;
  border-radius: 9999px;
  background: hsl(var(--foreground));
  animation: typingDot 1.2s infinite ease-in-out;
}
.typing-dots .dot:nth-child(2) {
  animation-delay: 0.15s;
}
.typing-dots .dot:nth-child(3) {
  animation-delay: 0.3s;
}

@keyframes typingDot {
  0%,
  80%,
  100% {
    opacity: 0.3;
    transform: translateY(0);
  }
  40% {
    opacity: 1;
    transform: translateY(-2px);
  }
}

/* Copy button (fallback) */
[aria-label="Code kopieren"],
[title="Code kopieren"] {
  border: 1px solid var(--border-glass);
  background: var(--surface-glass);
  padding: 6px 10px;
  border-radius: 10px;
}

/* Composer – robust gegen Tastatur */
.composer {
  position: sticky;
  bottom: calc(env(safe-area-inset-bottom, 0px) + var(--kb, 0px));
  z-index: 80;
}
[data-testid="composer-input"] {
  min-height: 56px;
  max-height: 40vh;
  resize: none;
}
[data-testid="composer-send"],
[data-testid="composer-stop"] {
  min-width: 44px;
  min-height: 44px;
  border-radius: 12px;
}

/* Composer-Buttons sicher über UI-Leisten */
[data-testid="composer-send"],
[data-testid="composer-stop"] {
  position: relative;
  z-index: 101;
}
